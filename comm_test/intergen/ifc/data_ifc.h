#pragma once

#ifndef _INTERGEN_GENERATED__data_ifc_H_
#define _INTERGEN_GENERATED__data_ifc_H_

//@file Interface file for data_ifc interface generated by intergen
//See LICENSE file for copyright and license information

//host class: ::ab::cd::data

#include <comm/commexception.h>
#include <comm/intergen/ifc.h>

// ***
// block placed before the generated client classes
// ***

namespace ab {
// ***
// block placed inside namespace
// ***
}

namespace ab {
namespace cd {
    struct data;
}}

////////////////////////////////////////////////////////////////////////////////
class data_ifc : public intergen_data_interface
{
public:

    // --- interface methods ---

    void set_a(int b);

    void set_b(const coid::token& a, ifc_out int* b);

    // --- creators ---

    static data_ifc* creator();

    // --- internal helpers ---

    ///Interface revision hash
    inline static const int HASHID = 1312421544u;

    ///Interface name (full ns::class string)
    inline static const coid::tokenhash& IFCNAME = "data_ifc"_T;

private:

    inline static const coid::ifcman::data_ifc* _difc = 0;
    inline static intergen_data_interface::icr_t* _cr_table = 0;
    inline static intergen_data_interface::ifn_t* _fn_table = 0;
};

// ***
// block placed after the generated client classes
// ***

////////////////////////////////////////////////////////////////////////////////
#pragma warning(push)
#pragma warning(disable : 4191)

inline void data_ifc::set_a(int b)
{ return DT_CALL(void,(int),0)(b); }

inline void data_ifc::set_b(const coid::token& a, ifc_out int* b)
{ return DT_CALL(void,(const coid::token&,int*),1)(a,b); }

#pragma warning(pop)

////////////////////////////////////////////////////////////////////////////////
inline data_ifc* data_ifc::creator()
{
    if (!_difc) {
        _difc = coid::ifcman::get_type_ifc<data_ifc>(1312421544);
        if (_difc) {
            _cr_table = _difc->_cr_table;
            _fn_table = _difc->_fn_table;
        }
        else {
            log_mismatch("data_ifc"_T, "data_ifc.creator"_T, "@1312421544"_T);
            return 0;
        }
    }

    typedef data_ifc* (*fn_creator)();
    static fn_creator create = reinterpret_cast<fn_creator>(_cr_table[0]);

    return create();
}


#endif //_INTERGEN_GENERATED__data_ifc_H_
